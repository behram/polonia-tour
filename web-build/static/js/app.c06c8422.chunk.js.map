{"version":3,"sources":["LocationCard.js","AppHeader.js","LocationDetails.js","config/firebase.js","App.js","web-build/register-service-worker.js"],"names":["LocationCard","Component","render","city","name","description","linkPhoto","category","coordinates","this","props","data","style","flex","source","uri","Text","note","fontSize","type","Image","height","width","toUpperCase","AppHeader","marginTop","StatusBar","currentHeight","backgroundColor","transparent","fontWeight","color","marginLeft","LocationDetails","item","navigation","state","params","ImageSlider","styles","container","images","header","footer","active","region","onPress","Linking","openURL","linkReservation","openingHour","navigationOptions","headerTintColor","headerStyle","borderBottomColor","borderBottomWidth","headerTitleStyle","StyleSheet","create","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","locations","require","YellowBox","ignoreWarnings","Main","React","constructor","super","onCollectionUpdate","querySnapshot","newPlaces","forEach","doc","setState","allPlaces","loading","ref","firestore","collection","latitude","longitude","componentWillUnmount","unsubscribe","componentDidMount","onSnapshot","status","Permissions","getAsync","LOCATION","askAsync","navigator","geolocation","getCurrentPosition","coords","console","log","err","Alert","alert","sampleLocation","desLatitude","desLongtitude","provider","PROVIDER_GOOGLE","showsUserLocation","followsUserLocation","initialRegion","latitudeDelta","longitudeDelta","map","location","i","key","title","coordinate","keyExtractor","horizontal","renderItem","TouchableHighlight","navigate","AppNavigator","createStackNavigator","screen","mode","createAppContainer","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.c06c8422.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Image, Text } from \"react-native\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  Card,\r\n  CardItem,\r\n  Thumbnail,\r\n  Icon,\r\n  Left,\r\n  Body\r\n} from \"native-base\";\r\nexport default class LocationCard extends Component {\r\n  render() {\r\n    const { city, name, description, linkPhoto, category, coordinates } = this.props.data;\r\n    return (\r\n      <Container>\r\n        <Content>\r\n          <Card style={{ flex: 1 }}>\r\n            <CardItem>\r\n              <Left>\r\n                <Thumbnail source={{ uri: linkPhoto[0] || linkPhoto[0] !== '' ? linkPhoto[0] : 'https://cdn.pixabay.com/photo/2013/07/13/14/05/location-162102__340.png' }} />\r\n                <Body>\r\n                  <Text>{name}</Text>\r\n                  <Text note>\r\n                    <Icon style={{fontSize: 16}} type=\"Entypo\" name=\"location-pin\" />\r\n                    {city}\r\n                  </Text>\r\n                </Body>\r\n              </Left>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                <Image\r\n                  source={{ uri: linkPhoto[0] ? linkPhoto[0] : 'https://cdn.pixabay.com/photo/2013/07/13/14/05/location-162102__340.png' }}\r\n                  style={{ height: 200, width: 200, flex: 1 }}\r\n                />\r\n                <Text>Category: {category.toUpperCase()}</Text>\r\n              </Body>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Right,\r\n  Button,\r\n  Icon\r\n} from \"native-base\";\r\nimport { Text, StatusBar } from \"react-native\";\r\nexport default class AppHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Header style={{ marginTop: StatusBar.currentHeight, backgroundColor: '#069' }}>\r\n        <Left>\r\n          <Button transparent>\r\n            <Icon type=\"FontAwesome\" name=\"location-arrow\" />\r\n            <Text style={{ fontWeight: \"bold\", color: \"#FFF\", marginLeft: 10 }}>\r\n              Polonia Tour\r\n            </Text>\r\n          </Button>\r\n        </Left>\r\n        <Right>\r\n          <Button transparent>\r\n            <Icon name=\"menu\" />\r\n          </Button>\r\n        </Right>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, Linking } from \"react-native\";\r\nimport ImageSlider from \"react-native-image-slider\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Card,\r\n  CardItem,\r\n  Text,\r\n  Icon,\r\n  Right,\r\n  Body\r\n} from \"native-base\";\r\n\r\nclass LocationDetails extends Component {\r\n  static navigationOptions = {\r\n    headerTintColor: '#ffffff',\r\n    headerStyle: {\r\n      backgroundColor: '#069',\r\n      borderBottomColor: '#ffffff',\r\n      borderBottomWidth: 3,\r\n    },\r\n    headerTitleStyle: {\r\n      fontSize: 18,\r\n    },\r\n};\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { item } = this.props.navigation.state.params;\r\n    return (\r\n      // <View>\r\n      //   <Text>{this.props.navigation.state.params.item.name}</Text>\r\n      // </View>\r\n      <Container>\r\n        <ImageSlider\r\n          style={styles.container}\r\n          images={this.props.navigation.state.params.item.linkPhoto}\r\n        />\r\n        <Content>\r\n          <Card>\r\n            <CardItem header>\r\n              <Text>Description</Text>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>{item.description}</Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem footer>\r\n              <Content>\r\n                <Card>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"at\" />\r\n                    <Text>Name</Text>\r\n                    <Right>\r\n                      <Text>{item.name}</Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"navigate\" />\r\n                    <Text>City</Text>\r\n                    <Right>\r\n                      <Text>{item.city}</Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"compass\" />\r\n                    <Text>Region</Text>\r\n                    <Right>\r\n                      <Text>{item.region}</Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"albums\" />\r\n                    <Text>Category</Text>\r\n                    <Right>\r\n                      <Text>{item.category}</Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"link\" />\r\n                    <Text>Link Reservation</Text>\r\n                    <Right>\r\n                      <Text style={{color: '#069'}}\r\n                        onPress={() => Linking.openURL(item.linkReservation)}\r\n                      >\r\n                        Go to link\r\n                      </Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <Icon color=\"#069\" active name=\"time\" />\r\n                    <Text>Opening Hours</Text>\r\n                    <Right>\r\n                      <Text>\r\n                        {item.openingHour ? `${item.openingHour} AM/PM` : \"-\"}\r\n                      </Text>\r\n                    </Right>\r\n                  </CardItem>\r\n                </Card>\r\n              </Content>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n  container: {\r\n    flex: 0.6\r\n  }\r\n});\r\n\r\nexport default LocationDetails;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\n// Initialize Firebase\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyAm4MQMpTuVh-TUxu-j3q0KAVJZ7ZllzCU\",\r\n  authDomain: \"poloniat-d76bf.firebaseapp.com\",\r\n  databaseURL: \"https://poloniat-d76bf.firebaseio.com\",\r\n  projectId: \"poloniat-d76bf\",\r\n  storageBucket: \"poloniat-d76bf.appspot.com\",\r\n  messagingSenderId: \"910563882699\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { Alert, TouchableHighlight, YellowBox, Text } from \"react-native\";\r\nimport { Permissions } from \"expo\";\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\r\nimport LocationCard from \"./LocationCard.js\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport AppHeader from \"./AppHeader\";\r\nimport { Container } from \"native-base\";\r\nimport LocationDetails from \"./LocationDetails\";\r\nimport firebase from \"./config/firebase\";\r\nconst locations = require(\"./locations.json\");\r\nimport { createStackNavigator, createAppContainer } from \"react-navigation\";\r\n\r\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase.firestore().collection(\"Attraction\");\r\n    this.state = {\r\n      latitude: 51.108543,\r\n      longitude: 17.040353,\r\n      locations: locations,\r\n      loading: false,\r\n      allPlaces: [],\r\n      coordinates: []\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n  onCollectionUpdate = querySnapshot => {\r\n    let newPlaces = [];\r\n    querySnapshot.forEach(doc => {\r\n      newPlaces = [...newPlaces, doc.data()];\r\n    });\r\n\r\n    this.setState({\r\n      allPlaces: newPlaces,\r\n      loading: false\r\n    });\r\n  };\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    const { status } = await Permissions.getAsync(Permissions.LOCATION);\r\n\r\n    if (status !== \"granted\") {\r\n      const response = await Permissions.askAsync(Permissions.LOCATION);\r\n    }\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) =>\r\n        this.setState({ latitude, longitude }, () =>\r\n          console.log(\"My location coordinates\", latitude, longitude)\r\n        ),\r\n      err => Alert.alert(err)\r\n    );\r\n\r\n    const {\r\n      locations: [sampleLocation]\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      desLatitude: sampleLocation.coords.latitude,\r\n      desLongtitude: sampleLocation.coords.longitude\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { coords, latitude, longitude, locations, allPlaces } = this.state;\r\n    return (\r\n      <Container style={{ flex: 1 }}>\r\n        <AppHeader />\r\n        <MapView\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation\r\n          followsUserLocation\r\n          style={{ flex: 1.2 }}\r\n          initialRegion={{\r\n            latitude,\r\n            longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421\r\n          }}\r\n        >\r\n          {locations.map((location, i) => {\r\n            console.log(location)\r\n            const {latitude, longitude} = location.coords;\r\n            // const latitude = 51.10238543;\r\n            // const longitude = 17.0460353;\r\n\r\n            // let latitude = location.coordinates.latitude;\r\n            // let longitude = location.coordinates.longitude;\r\n            // latitude = parseFloat(latitude);\r\n            // longitude = parseFloat(longitude);\r\n            // const [latitude, longitude] = location.coordinates;\r\n            // console.log(latitude, longitude);\r\n            return (\r\n              <Marker\r\n                key={i}\r\n                title={location.name}\r\n                coordinate={{ latitude, longitude }}\r\n                description={location.category}\r\n              />\r\n            );\r\n          })}\r\n        </MapView>\r\n        <FlatList\r\n          keyExtractor={(item, i) => item.description}\r\n          horizontal\r\n          data={allPlaces}\r\n          renderItem={({ item, i }) => {\r\n            return (\r\n              <TouchableHighlight onPress={() => this.props.navigation.navigate('LocationDetails', {item: item})}>\r\n                <LocationCard data={item} />\r\n              </TouchableHighlight>\r\n            );\r\n          }}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppNavigator = createStackNavigator(\r\n  {\r\n    Main: {\r\n      screen: Main,\r\n      navigationOptions: () => ({\r\n        header: null\r\n      })\r\n    },\r\n    LocationDetails: {\r\n      screen: LocationDetails,\r\n      navigationOptions: () => ({\r\n        title: \"Location Details\"\r\n      }),\r\n    }\r\n  },\r\n  {\r\n    mode: \"modal\"\r\n  }\r\n);\r\n\r\nexport default createAppContainer(AppNavigator);\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}